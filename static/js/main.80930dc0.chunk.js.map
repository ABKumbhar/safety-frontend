{"version":3,"sources":["Components/industry.jpeg","logo.svg","Components/NavbarComponent.js","Components/HeaderComponent.js","redux/Industry/IndustryActions.js","redux/Industry/IndustryTypes.js","redux/equipment/EquipmentActions.js","redux/equipment/EquipmentTypes.js","Components/CardComponent.js","Components/IndustryComponent.js","Components/HomeComponent.js","redux/Industry/IndustryReducer.js","redux/equipment/EquipmentReducer.js","redux/rootReducer.js","redux/store.js","Components/DetailComponent.js","Components/Footer.js","Components/EquipmentComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavbarComponent","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","href","HeaderComponent","style","textAlign","Jumbotron","backgroundColor","fontFamily","Image","src","industry","roundedCircle","fluid","fetchIndustryRequest","type","fetchIndustrySuccess","payload","fetchIndustryFailure","error","fetchEquipmentRequest","fetchEquipmentSuccess","equipment","fetchEquipmentFailure","CardComponent","props","setisOpen","Row","Col","xl","lg","Card","outline","CardBody","CardTitle","ind","name","CardText","url","target","adinfo","CardFooter","Button","to","pathname","indi","connect","state","IndustryData","industries","dispatch","fetchIndustry","axios","get","then","response","data","console","log","catch","message","search","setSearch","filteredIndustries","setFilteredIndustries","useEffect","filter","toLowerCase","includes","loading","Spinner","placeholder","onChange","e","value","map","key","id","HomeComponent","query","setQuery","item","setItem","queryi","setQueryi","setIndustry","industrysearch","setIndustrysearch","setEquipment","res","Form","inline","Input","list","i","length","initialState","IndustryReducer","action","EquipmentReducer","rootReducer","combineReducers","equipments","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","DetailComponent","location","questioni","q","number","question","answer","urlref","questione","Footer","md","Date","getFullYear","EquipmentData","fetchEquipment","filteredEquipments","setFilteredEquipments","App","exact","path","component","IndustryComponent","EquipmentComponent","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80930dc0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/industry.c5fc0e3e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{useState} from 'react'\r\nimport { FaIndustry } from 'react-icons/fa';\r\n\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavLink,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText\r\n  } from 'reactstrap';\r\nfunction NavbarComponent() {const [isOpen, setIsOpen] = useState(true);\r\n\r\n    const toggle = () => setIsOpen(isOpen);\r\n    return (\r\n        <div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand > Navigate here <FaIndustry/></NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink className=\"nav-link\" href=\"#/\">\r\n              <span> Home </span>\r\n          </NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n            <NavLink  href=\"#/industry\">\r\n              <span> Industry </span>\r\n          </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n            <NavLink className=\"nav-link\" href=\"#/equipment\">\r\n              <span> Equipment </span>\r\n          </NavLink>\r\n            </NavItem>\r\n\r\n            \r\n        </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavbarComponent\r\n","import React,{useState,useEffect} from 'react'\r\nimport { Card, CardBody, CardImg, CardText, CardTitle, Form, Input, Button } from 'reactstrap'\r\nimport NavbarComponent from './NavbarComponent'\r\nimport axios from 'axios'\r\nimport { Jumbotron,Media } from 'reactstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport industry from './industry.jpeg'\r\nfunction HeaderComponent() {\r\n    return (\r\n    <div className=\"Header\" style={{textAlign:\"center\"}} >\r\n\r\n        <Jumbotron style={{backgroundColor: \"Orange\"}}>\r\n\r\n            <h1 style={{fontFamily:\"Impact\"}}> Process safety App</h1>\r\n            <Image src={industry} roundedCircle fluid style={{textAlign:\"center\"}}/>\r\n\r\n                <br />\r\n                <div className=\"form\">\r\n                </div>\r\n            <br />\r\n            <span className=\"fa fa-home fa-lg\" style={{color:\"white\"}}> <h2 style={{fontFamily : \"Comic Sans MS\"}}> Information about startup, shutdown and maintenance availaible at the touch of your screen for free! </h2></span>\r\n\r\n        <NavbarComponent/>\r\n\r\n        </Jumbotron>\r\n        \r\n\r\n\r\n    </div>);\r\n}\r\n\r\nexport default HeaderComponent","import axios from 'axios'\r\nimport {\r\n  FETCH_INDUSTRY_REQUEST,\r\n  FETCH_INDUSTRY_SUCCESS,\r\n  FETCH_INDUSTRY_FAILURE\r\n} from './IndustryTypes'\r\n\r\nexport const fetchIndustry = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchIndustryRequest())\r\n    axios\r\n      .get('https://abkumbhar.pythonanywhere.com/industry/')\r\n    // .get('http://127.0.0.1:8000/industry/')\r\n      .then(response => {\r\n        // response.data is the users\r\n        const industry = response.data\r\n        console.log(response.data)\r\n        dispatch(fetchIndustrySuccess(industry))\r\n      })\r\n      .catch(error => {\r\n        // error.message is the error message\r\n        dispatch(fetchIndustryFailure(error.message))\r\n      })\r\n  }\r\n}\r\n\r\nexport const fetchIndustryRequest = () => {\r\n  return {\r\n    type: FETCH_INDUSTRY_REQUEST\r\n  }\r\n}\r\n\r\nexport const fetchIndustrySuccess = industry => {\r\n  return {\r\n    type: FETCH_INDUSTRY_SUCCESS,\r\n    payload: industry\r\n  }\r\n}\r\n\r\nexport const fetchIndustryFailure = error => {\r\n  return {\r\n    type: FETCH_INDUSTRY_FAILURE,\r\n    payload: error\r\n  }\r\n}\r\n","export const FETCH_INDUSTRY_REQUEST = 'FETCH_INDUSTRY_REQUEST'\r\nexport const FETCH_INDUSTRY_SUCCESS = 'FETCH_INDUSTRY_SUCCESS'\r\nexport const FETCH_INDUSTRY_FAILURE = 'FETCH_INDUSTRY_FAILURE'","import axios from 'axios'\r\nimport {\r\n  FETCH_EQUIPMENT_REQUEST,\r\n  FETCH_EQUIPMENT_SUCCESS,\r\n  FETCH_EQUIPMENT_FAILURE\r\n} from './EquipmentTypes'\r\n\r\nexport const fetchEquipment = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchEquipmentRequest())\r\n    axios\r\n      .get('https://abkumbhar.pythonanywhere.com/equipment/')\r\n    // .get('http://127.0.0.1:8000/equipment/')\r\n      .then(response => {\r\n        // response.data is the users\r\n        const equipment = response.data\r\n        console.log(response.data)\r\n        dispatch(fetchEquipmentSuccess(equipment))\r\n      })\r\n      .catch(error => {\r\n        // error.message is the error message\r\n        dispatch(fetchEquipmentFailure(error.message))\r\n      })\r\n  }\r\n}\r\n\r\nexport const fetchEquipmentRequest = () => {\r\n  return {\r\n    type: FETCH_EQUIPMENT_REQUEST\r\n  }\r\n}\r\n\r\nexport const fetchEquipmentSuccess = equipment => {\r\n  return {\r\n    type: FETCH_EQUIPMENT_SUCCESS,\r\n    payload: equipment\r\n  }\r\n}\r\n\r\nexport const fetchEquipmentFailure = error => {\r\n  return {\r\n    type: FETCH_EQUIPMENT_FAILURE,\r\n    payload: error\r\n  }\r\n}\r\n","export const FETCH_EQUIPMENT_REQUEST = 'FETCH_EQUIPMENT_REQUEST'\r\nexport const FETCH_EQUIPMENT_SUCCESS = 'FETCH_EQUIPMENT_SUCCESS'\r\nexport const FETCH_EQUIPMENT_FAILURE = 'FETCH_EQUIPMENT_FAILURE'","import React from 'react'\r\nimport {useState} from 'react'\r\nimport { Row, Col, Button, Card, CardBody, CardText, CardTitle, Spinner, CardFooter } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction CardComponent(props) {\r\n    const [isOpen, setisOpen] = useState(false) \r\n    const handleClick = () => {\r\n        setisOpen(!isOpen)\r\n\r\n        }\r\n      \r\n    return (\r\n        <div>\r\n\r\n            <Row>\r\n            <Col xl=\"4\" lg=\"6\">\r\n            </Col>\r\n            <Col xl=\"4\" lg=\"6\">\r\n\r\n            <Card className=\"mb-5\" outline color=\"info\">\r\n            <CardBody>\r\n              <CardTitle className=\"card-title font-weight-bold font-size-lg\">Industry/Equipment Name : {props.ind.name}</CardTitle>\r\n              <CardText>\r\n                <br/>\r\n               \r\n               Data taken from (i.e. reference) :  {props.ind.url ? <a href={props.ind.url} target=\" \">  <b> {props.ind.adinfo} (Click to visit reference) </b> </a> : <div></div>}\r\n              </CardText>\r\n              </CardBody>\r\n               <CardFooter>\r\n              For more information, click on following link to know more information\r\n              <Button color=\"success\" onClick= {handleClick}>\r\n                \r\n              <Link to ={{pathname:'/detail',indi : props.ind }}>\r\n               <div style={{color:\"white\"}}>Click to know more ...</div></Link>\r\n              </Button>\r\n              </CardFooter>\r\n\r\n              \r\n              \r\n              \r\n              \r\n\r\n              \r\n              \r\n              \r\n            </Card >\r\n            </Col>\r\n            <Col xl=\"4\" lg=\"6\">\r\n            </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardComponent\r\n","import React, {Fragment, useEffect, useState} from 'react';\r\nimport {fetchIndustry} from '../redux'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {connect,useDispatch,useSelector} from 'react-redux';\r\nimport { Form,Row, Col, Button, Card, CardBody, CardText, CardTitle, Spinner } from 'reactstrap';\r\nimport CardComponent from './CardComponent'\r\n\r\nfunction IndustryComponent({IndustryData,fetchIndustry}) {\r\n  //const [isOpen, setisOpen] = useState(false) \r\n  const [search, setSearch] = useState(\"\");\r\n  const [filteredIndustries, setFilteredIndustries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchIndustry()\r\n  },[])\r\n \r\n\r\n  useEffect(() => {\r\n    setFilteredIndustries(\r\n      IndustryData.industry.filter(ind =>\r\n        ind.name.toLowerCase().includes(search.toLowerCase())\r\n      )\r\n    );\r\n  }, [search, IndustryData]);\r\n\r\n    return IndustryData.loading ? (\r\n <div>\r\n <Spinner>\r\n </Spinner>\r\n</div>\r\n      ) : IndustryData.error ? (\r\n      <h2>{IndustryData.error}</h2>\r\n    ) : (\r\n      <div>\r\n        <h2 style = {{textAlign:\"center\"}}>Industry List</h2>\r\n        <div >\r\n        <div style={{textAlign:\"center\"}}>\r\n        <input \r\n        type=\"text\"\r\n        placeholder=\"Search Industries\"\r\n        onChange={e => setSearch(e.target.value)}/>\r\n        </div>\r\n          {     \r\n      \r\n\r\n            filteredIndustries.map(ind => \r\n          //  <Row>\r\n          //   <Col xl=\"4\" lg=\"6\">\r\n          //   </Col>\r\n          //   <Col xl=\"4\" lg=\"6\">\r\n          //   <Card className=\"mb-5\" e-card-horizontal\t>\r\n          //   <CardBody>\r\n          //     <CardTitle className=\"card-title font-weight-bold font-size-lg\">{ind.name}</CardTitle>\r\n          //     <CardText>\r\n          //       {ind.adinfo}\r\n          //     </CardText>\r\n          //     </CardBody>\r\n          //     <Button onClick= {handleClick}>\r\n          //       More ...\r\n          //     </Button>\r\n              \r\n          //     <CardText>\r\n          //       <div>\r\n          //   {\r\n          //     isOpen ? (\r\n          //       <div>\r\n          //       {\r\n          //       ind.questioni.map((q) => \r\n          //       <div>\r\n          //       <b>{q.question}</b>\r\n          //       <br/>\r\n          //       {q.answer}\r\n          //       </div>\r\n          //       )} </div>\r\n          //       ) : (<div></div> )\r\n                \r\n          //   }</div>\r\n          //      </CardText>\r\n              \r\n              \r\n              \r\n          //   </Card >\r\n          //   </Col>\r\n          //   <Col xl=\"4\" lg=\"6\">\r\n          //   </Col>\r\n          //   </Row>\r\n          <li key={ind.id}>\r\n          <CardComponent ind = {ind}/>\r\n          </li>\r\n            )}\r\n        </div>\r\n      </div>\r\n    )\r\n        \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      IndustryData: state.industries\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      fetchIndustry: () => dispatch(fetchIndustry())\r\n    }\r\n  }\r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(IndustryComponent)","import React,{useState,useEffect} from 'react'\r\nimport {Input,Form,Button,Jumbotron, FormGroup} from 'reactstrap'\r\nimport CardComponent from './CardComponent'\r\nimport axios from 'axios'\r\nimport { FiSearch } from 'react-icons/fi';\r\n\r\nfunction HomeComponent() {\r\n    const [query,setQuery]=useState(\"helo\")\r\n    const [item,setItem] = useState([])\r\n    const [queryi,setQueryi]=useState(\"\")\r\n    const [industry,setIndustry] = useState([])\r\n    const [industrysearch,setIndustrysearch] = useState([])\r\n    const [equipment,setEquipment] = useState([])\r\n    useEffect(() => {\r\n        axios\r\n        .get(`https://abkumbhar.pythonanywhere.com/list?search=${query}`)\r\n        .then((res)=> \r\n           {console.log(res)\r\n        setItem(res.data)}\r\n            \r\n        )\r\n        .catch((error)=>\r\n        {console.log(error.message)\r\n        \r\n        }\r\n        )\r\n\r\n     ;\r\n      }, [query]);\r\n\r\n      useEffect(() => {\r\n        axios\r\n        .get(`https://abkumbhar.pythonanywhere.com/industry/trending`)\r\n        .then((res)=> \r\n           {console.log(res)\r\n        setIndustry(res.data)}\r\n            \r\n        )\r\n        .catch((error)=>\r\n        {console.log(error.message)\r\n        \r\n        }\r\n        )\r\n\r\n     ;\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n        axios\r\n        .get(`https://abkumbhar.pythonanywhere.com/equipment/trending`)\r\n        .then((res)=> \r\n           {console.log(res)\r\n        setEquipment(res.data)}\r\n            \r\n        )\r\n        .catch((error)=>\r\n        {console.log(error.message)\r\n        \r\n        }\r\n        )\r\n\r\n     ;\r\n      }, []);\r\n \r\n      useEffect(() => {\r\n        axios\r\n        .get(`https://abkumbhar.pythonanywhere.com/industry`)\r\n        .then((res)=> \r\n           {console.log(res)\r\n        setIndustrysearch(res.data)}\r\n            \r\n        )\r\n        .catch((error)=>\r\n        {console.log(error.message)\r\n        \r\n        }\r\n        )\r\n\r\n     ;\r\n      }, []);\r\n\r\n    return (\r\n        <div>\r\n        <Form inline>\r\n        <Input list=\"searching\" placeholder=\"search here ...\" id=\"search\" onChange={e => setQueryi(e.target.value)}/>\r\n        <datalist id=\"searching\">\r\n            {query && industrysearch.map((i)=>{\r\n            return(<option value={i.name}/>)}\r\n            )}\r\n        </datalist>\r\n        <Button type=\"submit\" color=\"danger\" onClick={e => setQuery(queryi)}>Submit <FiSearch/></Button>\r\n    \r\n        </Form>\r\n       <div>\r\n           {item.length ?  item.map(i => \r\n           <li key={i.id}>Searched results ... <CardComponent ind={i}/></li>\r\n           ) : (<div >Search box is empty or result not found</div>)}\r\n       </div>\r\n         <Jumbotron >\r\n             <h1>Trending Today ....</h1>\r\n             <br/>\r\n             <h4>Updates on new information on industry safety</h4>\r\n             {industry.length ? industry.map(i =>\r\n           <li key={i.id}><CardComponent ind={i}/></li>\r\n           ) : (<div style={{textAlign:\"center\"}}>Nothing to new show today</div>)}\r\n           \r\n\r\n         <br/>\r\n            <h4> Updates on new information on equipment safety </h4>\r\n\r\n             {equipment.length ? equipment.map(i =>\r\n           <li key={i.id}><CardComponent ind={i}/></li>\r\n           ) : (<div style={{textAlign:\"center\"}}>Nothing to new show today</div>)}\r\n           \r\n         </Jumbotron>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default HomeComponent\r\n","import {\r\n    FETCH_INDUSTRY_REQUEST,\r\n    FETCH_INDUSTRY_SUCCESS,\r\n    FETCH_INDUSTRY_FAILURE\r\n  } from './IndustryTypes'\r\n  \r\n  const initialState = {\r\n    loading: false,\r\n    industry: [],\r\n    error: ''\r\n  }\r\n  \r\n  const IndustryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case FETCH_INDUSTRY_REQUEST:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      case FETCH_INDUSTRY_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          industry: action.payload,\r\n          error: ''\r\n        }\r\n      case FETCH_INDUSTRY_FAILURE:\r\n        return {\r\n          loading: false,\r\n          industry: [],\r\n          error: action.payload\r\n        }\r\n      default: return state\r\n    }\r\n  }\r\n  \r\n  export default IndustryReducer\r\n  ","import {\r\n    FETCH_EQUIPMENT_REQUEST,\r\n    FETCH_EQUIPMENT_SUCCESS,\r\n    FETCH_EQUIPMENT_FAILURE\r\n  } from './EquipmentTypes'\r\n  \r\n  const initialState = {\r\n    loading: false,\r\n    equipment: [],\r\n    error: ''\r\n  }\r\n  \r\n  const EquipmentReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case FETCH_EQUIPMENT_REQUEST:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      case FETCH_EQUIPMENT_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          equipment: action.payload,\r\n          error: ''\r\n        }\r\n      case FETCH_EQUIPMENT_FAILURE:\r\n        return {\r\n          loading: false,\r\n          equipment: [],\r\n          error: action.payload\r\n        }\r\n      default: return state\r\n    }\r\n  }\r\n  \r\n  export default EquipmentReducer\r\n  ","import { combineReducers } from 'redux'\r\nimport IndustryReducer from './Industry/IndustryReducer'\r\nimport EquipmentReducer from './equipment/EquipmentReducer'\r\nconst rootReducer = combineReducers({\r\n  industries : IndustryReducer,\r\n  equipments : EquipmentReducer\r\n\r\n})\r\n\r\nexport default rootReducer\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './rootReducer'\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(logger, thunk))\r\n)\r\n\r\n\r\n","import React from 'react'\r\nimport { CardText,Card, CardBody } from 'reactstrap'\r\n\r\nfunction DetailComponent(props) {\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <h3>\r\n                {props.location.indi.name}\r\n                </h3>\r\n                <br/>\r\n                <h4>Reference URL (click next): <a href={props.location.indi.url} target=\" \"> {props.location.indi.adinfo} </a></h4>\r\n\r\n                </CardBody>\r\n\r\n                <CardText>\r\n\r\n                <table className=\"table table-hover\">\r\n                \r\n                \r\n               \r\n                    <tbody>\r\n                    <tr>\r\n                    \r\n                             {props.location.indi.questioni &&\r\n                    props.location.indi.questioni.map((q) => \r\n                    \r\n                    <div>\r\n                    <li key={q.id}>\r\n                    <td>\r\n                    <b>Question {q.number} : {q.question}</b>\r\n                    <br/>\r\n                    Ans : {q.answer}\r\n                    <br/>\r\n                    Further info / Ref : {q.urlref}\r\n                    </td>\r\n                    </li>\r\n                    </div>\r\n                    )} \r\n                    {props.location.indi.questione &&\r\n                    props.location.indi.questione.map((q) => \r\n                    <div>\r\n                      <li key={q.id}>\r\n                      <tr>\r\n                        <td>\r\n                    <b>Question {q.number} : {q.question}</b>\r\n                    <br/>\r\n                    Ans : {q.answer}\r\n                    <br/>\r\n                    Further info / Ref : {q.urlref}\r\n                    </td>\r\n                    </tr>\r\n                    </li>\r\n                    </div>\r\n                    )}\r\n                    </tr>\r\n                    </tbody>\r\n                    \r\n                \r\n                </table>\r\n                  \r\n                </CardText>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailComponent\r\n","import React from 'react'\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n                <MDBFooter className=\"font-small pt-4 mt-4\" style={{backgroundColor:\"black\",color:\"white\"}}>\r\n      <MDBContainer fluid className=\"text-center text-md-left\">\r\n        <MDBRow>\r\n          <MDBCol md=\"6\">\r\n            <h5 className=\"title\">Contact Us</h5>\r\n            <p>\r\n               This website is made only as a personal project. We don't recommend to use this information in actual project.\r\n            </p>\r\n          </MDBCol>\r\n          <MDBCol md=\"6\">\r\n            <h5 className=\"title\">Links</h5>\r\n            <b>\r\n            <ul>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"#/\">Home</a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"#/industry\">Industry</a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"#/equipment\">Equipment</a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"#!\">Link 4</a>\r\n              </li>\r\n            </ul>\r\n            </b>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        <MDBContainer fluid>\r\n          &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.mdbootstrap.com\"> ABKumbhar Enterprise </a>\r\n        </MDBContainer>\r\n      </div>\r\n    </MDBFooter>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, {Fragment, useEffect, useState} from 'react';\r\nimport {fetchEquipment} from '../redux'\r\nimport {connect} from 'react-redux';\r\nimport { Button, Card, CardBody, CardText, CardTitle, Spinner } from 'reactstrap';\r\nimport CardComponent from './CardComponent'\r\n\r\nfunction EquipmentComponent({EquipmentData,fetchEquipment}) {\r\n  const [filteredEquipments, setFilteredEquipments] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [isOpen, setisOpen] = useState(false) \r\n  useEffect(() => {\r\n    fetchEquipment()\r\n  },[])\r\n \r\n  useEffect(() => {\r\n    setFilteredEquipments(\r\n      EquipmentData.equipment.filter(ind =>\r\n        ind.name.toLowerCase().includes(search.toLowerCase())\r\n      )\r\n    );\r\n  }, [search, EquipmentData]);\r\n\r\n\r\n    return EquipmentData.loading ? (\r\n<Spinner >\r\n\r\n</Spinner>\r\n      ) : EquipmentData.error ? (\r\n      <h2>{EquipmentData.error}</h2>\r\n    ) : (\r\n      <div >\r\n        <h2 style = {{textAlign:\"center\"}}>Equipment List</h2>\r\n        <div>\r\n          <div style={{textAlign:\"center\"}}>\r\n        <input \r\n        type=\"text\"\r\n        placeholder=\"Search Equipments\"\r\n        onChange={e => setSearch(e.target.value)}/>\r\n      </div>\r\n\r\n          {\r\n            filteredEquipments.map(ind => \r\n          //  <Row>\r\n          //   <Col xl=\"4\" lg=\"6\">\r\n          //   </Col>\r\n          //   <Col xl=\"4\" lg=\"6\">\r\n          //   <Card className=\"mb-5\" e-card-horizontal\t>\r\n          //   <CardBody>\r\n          //     <CardTitle className=\"card-title font-weight-bold font-size-lg\">{ind.name}</CardTitle>\r\n          //     <CardText>\r\n          //       {ind.adinfo}\r\n          //     </CardText>\r\n          //     </CardBody>\r\n          //     <Button onClick= {handleClick}>\r\n          //       More ...\r\n          //     </Button>\r\n              \r\n          //     <CardText>\r\n          //       <div>\r\n          //   {\r\n          //     isOpen ? (\r\n          //       <div>\r\n          //       {\r\n          //       ind.questioni.map((q) => \r\n          //       <div>\r\n          //       <b>{q.question}</b>\r\n          //       <br/>\r\n          //       {q.answer}\r\n          //       </div>\r\n          //       )} </div>\r\n          //       ) : (<div></div> )\r\n                \r\n          //   }</div>\r\n          //      </CardText>\r\n              \r\n              \r\n              \r\n          //   </Card >\r\n          //   </Col>\r\n          //   <Col xl=\"4\" lg=\"6\">\r\n          //   </Col>\r\n          //   </Row>\r\n          <li key={ind.id}>\r\n          <CardComponent ind = {ind}/>\r\n          </li>\r\n            )}\r\n        </div>\r\n      </div>\r\n    )\r\n        \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      EquipmentData: state.equipments\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      fetchEquipment: () => dispatch(fetchEquipment())\r\n    }\r\n  }\r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(EquipmentComponent)","import React, { Fragment, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport HeaderComponent from './Components/HeaderComponent';\nimport IndustryComponent from './Components/IndustryComponent';\nimport NavbarComponent from './Components/NavbarComponent'\nimport {HashRouter as Router, BrowserRouter, Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport HomeComponent from './Components/HomeComponent'\nimport {Provider} from 'react-redux'\nimport {store} from './redux/store'\nimport DetailComponent from './Components/DetailComponent'\nimport Footer from './Components/Footer'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport EquipmentComponent from './Components/EquipmentComponent'\nfunction App() {      \n\n\n  return (\n  \n    <Fragment>\n       <HeaderComponent/> \n      <div>\n          \n          <Router >\n          <Switch>\n               <Route exact path=\"/\" component={HomeComponent}/>  \n            <Route path='/industry' component={IndustryComponent}/>\n            <Route path='/equipment' component={EquipmentComponent}/>\n            <Route path='/detail' component={DetailComponent}/>\n\n          </Switch>\n          \n            </Router>\n     </div>\n     <Footer/>\n\n     </Fragment>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {store} from './redux/store'\nimport { Provider } from 'react-redux';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}